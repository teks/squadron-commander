Iterations
==========

## Iteration 1: Building Blocks
[v] spaceborne object base class
[v] basic ship class
[v] map
    [v] (spaceborne) object storage
    [v] distance function
[v] Global simulation class
[v] plan more, clearly

## Iteration 2: draft short-ranged map
[v] local map command: map <x> <y>
[v] ship designation

## Iteration 3: Timekeeping + Friendly ship movement
[v] move a ship instantly, disregarding velocity
[v] design FTL system; probably linear hyperspace speed in squares/day
[v] basic UX messaging: simulation emits messages consumed by UX object
[v] basic simulation ticking
[v] after each order to a ship, if untasked ships, list them
[v] move a ship within the simulation's timekeeping
[v] 'run' command with default tick count of 24h = 24 ticks

## Iteration 4
fix random stuff, look for TODOs and cleanup:
[v] stop using uncommited code as initializer
    [v] it'll need argparse eventually anyway, just do it now
[v] populate the cui labels at startup (later will need to do it at spawn time)
[v] research CLI argument parsing:
    [v] demo argparse
    [v] read about shlex, compare & contrast:
        https://docs.python.org/3/library/shlex.html#module-shlex
    [v] make CLI arg parsing decision
[v] implement arg parsing for CLI based on ---^

## Iteration 5
going to do another random fixup iteration
[v] various TODOs
[v] cure map viewing pain with `smap`, half-scale map cmd

## Iteration 6
add new SBO type: enemy
[v] class Enemy(Ship)
[v] change Simulation to have single searchable collection of objects
[v] add enemy to Simulation
[v] add enemy output to Simulation.objects()
[v] add enemy display to short-ranged map
[v] poke around for other bits

## iteration 7
combat engine MVP; no encounters yet just mechanics + tests
[v] prep Ship for combat (hull, shields, shield recharge
[v] entry point for 1 tick of combat is simulation.combat(units)
[v] assign base_combat_value to each ship
[v] Compute side CV, adjust by random advantage; find side CV ratio
[v] individual ship retreat
[v] track retreated ships
[v] Apply damage to shields then hull
[v] test & revise

## iteration 8
continue developing combat
[v] check for ship destruction and send messages
[v] add messaging to combat engine
[v] bring combat to a basic functional state
    [v] each tick, after movement step, run combat step

## iteration 9
[v] space stations: starbases and space colonies; free-floating for now, not in orbit
[v] simplest AI for raiders: they attack nearest settlement
    AI action selection is last in the tick so the user can be aware of headings
[v] damage system for space stations; crib from Ship
[v] automated testing of i9 diff
[v] playtesting

## iteration 10
[v] why are enemies off the map?
[v] `status` command: by default show status of all units
[v] add movement prediction markers to short range map
[v] pause simulation after each combat
[v] revise combat report; it's hard to read

### i11
in retrospect this iteration is too big and mixes too many disjoint concerns
[v] use `ls` to show a ship when it needs orders:
    24h> mv ^0 28 56
    1 units need orders:
    <trek.trek.FriendlyShip alice Point(x=29.740456597169644, y=10.44552372684389)>
[v] combat enrichment
    [v] morale:
        [v] set initial value: self.morale = 0.0 # neutral
        [v] depletion & restoration
        [v] effect on combat
        [v] write some tests
        [v] do playtest; fallout:
            [v] in `ls`, CV can have too many digits: CV=0.9875
    [v] system damage
        [v] when there's hull damage, apply systems damage
            [v] Each system is subjected to a separate roll:
                * Chance of damage grows with hull damage fraction.
                * Severity of damage also grows with hull damage fraction.
                Each system is tracked separately as a fraction (1.0 = undamaged).
                The fraction tells how much performance is degrading.
        [v] List of systems to damage and the effects of damage:
            [v] Shields: Damage reduces maximum
            [v] Warp Drive: Reduced speed
            [v] Tactical Systems: Reduced combat value
        [v] do playtests
        [v] ship's velocity can't be shown; no way to check on drive damage
        [x] write some tests
[v] `show <unit>...` to show system damage etc
    see `doc/object-detail-view.md`

### i12 - remaining game engine work
[v] ship repairs - see doc/design.md Ship Engineering & Repair
    [v] basic repair: each ship gets a repair rate & repairs a bit each tick
    [v] no progress on a combat tick
    [v] x1.0 FTL
    [v] x1.5 waiting alone
    [v] x2.0 waiting with a friendly (n friendlies together means x2.0 for each of them)
    [v] pause simulation when a friendly ship's repairs are complete
    [v] show estimated time to fix

### i13 round of ux improvements
[v] can I get argparse doc text to show up in Cmd outputs eg `> ? smap`?
    yes: `def help_map(self): self.map_parser.print_help()`
    but it'll need a buncha work to make it nice; may be easier to just
    keep adding to docstrings:
    * parser needs some massaging to make its help text look right
    * class trek.cli.CLI needs machinery to avoid boilerplate, eg:
        class CLI(cmd.Cmd):
            pass
        MapCommand(CLI,...)  # adds do_map and help_map
        ListCommand(Cli,...) # adds do_list and help_list
[v] map's ':N' issues:
    [v] when there's a `:N` showing on a map, display its contents someplace
        every time there's a combat those `:N` displays show up, and
        the player needs good info on what `:N`; means
    [v] fix this display error when 10 or more units are in the same ux cell:
           . . . . . . . . . . . . . . . . .
        32 . . . . . . . . :10. . . . . . . .
           . . . . . . . . . . . . . . . . .
        probably stop displaying a count of units; instead display a letter,
        eg :A and then below show below:
            Point A: Multiple contacts near (13, 17): ^1 ^2 ^3 !1 !4 @0
[v] `ls a b c d` isn't an error
[v] `run 3` isn't an error but does NOT wait 3h and pause
[x] `ls --help` shows the help for the parser, heh
    I've decided this is a feature
[v] COMBAT REPORT and `ls` don't show lists of ships in the same order, they should

### i14 playable scenario
[v] class Scenario; check it for victory conditions each tick
[v] enemies appear to the left, retreat to the left?
[v] new ones spawn periodically
[v] vessels keep moving after they're destroyed if they were destroyed while moving
[v] smap has difficulty with units that have x=1:
    16 . . . .
       + . . . <-- the '+' is the heading indicator for !1 at (1, 14)
    12 . . . .
         4   8
[v] complete a few playthroughs, notes here:
    [v] need `mv ^3 @1`
    [v] hahaha fuck! newly spawned enemies jam the simulation:
        Not ready to run; 3 unit(s) need orders:
        !4 Raider-E   ( 1.00, 26.00) W=1.00 CV=1.00 [###])))  NO ORDERS
    [v] complete waves-of-enemies scenario; confirm it finishes successfully
    [v] new enemy spawns don't seem to stop the clock:
        100h Object spawned: !4 Raider-E...
        102h>

