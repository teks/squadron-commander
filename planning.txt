Iterations
==========

### i15 AT LAST THE MOTHERFUCKING BETA WOOOOOOOO
[v] long delay after last wave is defeated, see stash
[v] turn off `map` command for beta instead of fixing its bugs
[v] retreat should alter behavior of retreating enemies;
    they should actually retreat towards their origin direction for a bit
    (it's a way of driving enemies away from a base or target)
[v] issue: SpaceColonies have 0 max shields but still have a shields Component
    so rejigger so they have shields (easier than removoing the Component).
[ ] mull renaming project to 'Squadron Commander' / SQUADCOM
    [v] rename trek module to 'engine'
    [v] rename trek package
    [ ] rename pytrek.py
    [ ] rename test_trek.py
    [ ] change README.md
    [ ] change HOWTOPLAY.md
    [ ] search for remaining textual uses of 'trek'
[v] second-to-lastly go over docstrings to Cmd do_foo methods one more time
[ ] lastly, add a license & push to github


Roadmap
=======
### Complete Beta: That which isn't embarrassing to show other people
* FEATURE FREEZE, BUGFIXES ONLY
* and only really necessary bug fixes
* waves-of-raiders scenario considered default for beta
* remaining beta work is in i15

### Post-beta
* Decide what to do if anything; possibilities:
    * Start on GUI via pygame or something?
    * Continue adding gameplay features & enriching simulation?
    * halt development for awhile to work on something else?

Backlog
=======
### ungroomed
[ ] in the COMBAT REPORT, displayed hull damage can sometimes exceed remaining
    hull, it'd surprise the user --vvv
    LOST     !1 lowragh     1.0    1.3
    LOST     !2 ukliss      1.0    1.3
[ ] `follow ^3 ^2` is a 'follow' cmd? how hard would that be?

[ ] blend at and vs together into `intercept`/`it` since combat is automatic?

[ ] `show <unit>` should describe effects of system damage explicitly:
    !2 ukliss     (32.00, 32.00) W=1.00 CV=0.84 [###]     ATTACKING @1 New Ceylon (32.00, 32.00)
        Morale:         -0.3
        Combat Value:    0.84   Tactical systems damaged, efficiency 90%.
        Shields:         0.00   Shields operating normally.
        Max Safe Speed:  1.00   FTL Drive operating normally.

[ ] ops: repair & docking
    dock & undock require 1h to complete
    let ships dock with facilities (and with each other?)
    raise morale to 0.0 by docking at a base and staying 24 hours, +0.1 for each 24h after
    increase repair rate when docked

### UI/UX
[ ] show light year numbers on top & right of map not just left & bottom
[ ] distance computing command, `d s1 e0`, dunno what `d s0 s1 e0` would output
[ ] why do these messages arrive out of order?
    200h Received message: ChosenNewTarget(obj=<trek.trek.EnemyShip Raider-F...
    200h Object spawned: !5 Raider-F   ( 1.00, 60.00) W=1.00 CV=1.00 [###])))...
[ ] often defenders will need to do something, then wait, but it gets tedious if there are several
    options; pick one or both:
        [ ] wt with no arguments should wait all NO ORDERS ships?
        [ ] rw run-with-wait; waits-all then starts simulation
[ ] squadron grouping?
    [ ] gadd NAME MEMBER...
    [ ] gdel NAME MEMBER...
[ ] when simulation is running, configurable delay & message for message for
    tick passage. maybe every 5 or 10? make it configurable
[ ] on each pause, give a report?
[ ] showing turn or tick number more often eg:
    [ ] show tick in prompt? eg `(+14h) ` or maybe `[0300] ` for 3 AM
    [ ] most messages should be prefixed with tick (in hours or walltime) eg:
        +13h ARRIVAL: ^2 baker has arrived at Point(x=32.0, y=32.0).
[ ] need a "tell me about the local area" command that
    lists everything in the area and gives status
    maybe a 'sitrep' cmd issues to a ship?
    this can provide info when units are stacked up eg `:A`
[ ] `map` bugs
    [ ] this command raises due to exceeding map bounds: map 37 16 5 10
        (need zoomable map command for getting a better look at crowded space)
    [ ] map captions/scale could be better; here for `map 32 32 8 2`:
              . . . . . . . . . . . . . . . . .
           24 . . . . . . . . . . . . . . . . .
               24  26  26  28  28  30  30  32

### gameplay features
[ ] support ArtificialObject with no tactical nor shield Components
[ ] make some ship classes and experiment with combat outcomes; for now symmetrically:
    [ ] go over numerical balance of ship values; see number-mull
    [ ] corvette (enemy: crow) <-- enemies are named after birds I guess
    [ ] cruiser (enemy: vulture)

[ ] refine ship's combat value further? (shields down, hull damage?)
[ ] interception points:
    [ ] show interception point on `at` cmd
    [ ] show interception point in `ls` when ATTACK
    [ ]? need a "show me the interception point" cmd
    [ ] show interception point when attack cmd is issued

### low priority
[ ] spend a day going through code & looking for refactoring oppportunities;
    there's some cruft piling up
[ ] `wait <unit> <duration>`  <-- add duration?
[ ] When arriving at a destination, report on whom else is there:
    21h ARRIVAL: ^1 Defender-2 has arrived at Point(x=32.0, y=11.0). Also present is @1 New Ceylon.
[ ] morale should affect repair rate
[ ] auto-retreat button: order that toggles `ship.evasive` & retreat_check checks it
[ ] ships should be able to exceed cruising speed at risk of drive damage
    it's an authorization that squadcomm has to give to a ship: "you are cleared for redline maneuvers"
    [ ] maximum speed is . . . ?
[ ] mull a 'maneuverability' value for ships
[ ] look into non-flat probabilities:
    https://docs.python.org/3/library/random.html#real-valued-distributions
[ ] support other goals for raiders besides destroying things:
    * they raid a place to get resources, doing damage in the process
    * after their holds are full they try to escape the way they came
    [ ] sometimes carry off hostages when they raid settlements?
        have to send ships to get them back? that implies boarding ops
[ ] fancier protection of bases:
    one can already protect bases; that's what interception is for, but maybe
    something more fancy:
    [ ] option 1: retreat results in forced movement (away from a base if present)
        [ ] retreat moves using EMERGENCY SPEED
        [ ] Each ship's emergency warp value is used for this.
        [ ] Ships from a side tend to retreat in the same direction.
    [ ] option 2: if battle includes friendlies and a base, sometimes/somehow exclude the base:
        [ ] if friendlies are doing Order.PROTECT(base)?
            [ ] Sometimes one WANTS the base to engage; that suggests an Order.
            [ ] implement algorithm:
                for base in local bases:
                    if (any present friendly vessel is PROTECTing a base
                            and there are enough friendlies present vs. too many foes (ratio tbd):
                        exclude(base)
    [ ] option n: As 2 but TBD
        [ ] if friendlies were there during the previous tick (so they have time to range out and engage the foes?)
        [ ] if len(friendly vessels) >= len(enemies), exclude base
