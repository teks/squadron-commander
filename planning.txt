### i11
[v] use `ls` to show a ship when it needs orders:
    24h> mv ^0 28 56
    1 units need orders:
    <trek.trek.FriendlyShip alice Point(x=29.740456597169644, y=10.44552372684389)>
[ ] combat enrichment
    [v] morale:
        [v] set initial value: self.morale = 0.0 # neutral
        [v] depletion & restoration
        [v] effect on combat
    [ ] system damage
        [ ] when there's hull damage, apply systems damage
        [ ] add systems to ships
    [ ] refine ship's combat value further? (shields down, sys dmg?)
[ ] `status <unit>...` to show system damage etc
    see `doc/object-detail-view.md`
[ ] additional ux as issues reveal themselves


Roadmap
=======
UX
[ ] how much more time am I going to spend on a console game before switching to pygame or something?


Backlog
=======

### ux & i9 playtesting feedback
[ ] interception points:
    [ ] show interception point in `ls` when ATTACK
    [ ]? need a "show me the interception point" cmd
    [ ] show interception point when attack cmd is issued
[ ] add `<duration>` arg to `run` cmd
[ ] Message for interception
[ ] message for tick passage, maybe every 5 or 10? make it configurable
[ ] on each pause, give a report?
[ ] showing turn or tick number more often eg:
    [ ] show tick in prompt? eg `(+14h) ` or maybe `[0300] ` for 3 AM
    [ ] most messages should be prefixed with tick (in hours or walltime) eg:
        +13h ARRIVAL: ^2 baker has arrived at Point(x=32.0, y=32.0).
[ ] when units are stacked up eg `:3`, need a way to quickly list contents
[ ] need a "tell me about the local area" command that
    lists everything in the area and gives status
    maybe a 'sitrep' cmd issues to a ship?

### ops: repair & docking
[ ] raise morale to 0.0 by docking at a base and staying 24 hours, +0.1 for each 24h after

### combat (descending priority):
[ ] force movement on retreat
  [ ] retreat moves using EMERGENCY SPEED
  [ ] Each ship's emergency warp value is used for this.
  [ ] Ships from a side tend to retreat in the same direction.
[ ] make some ship classes and experiment with combat outcomes
    for now symmetrically:
    [ ] go over numerical balance of ship values; see number-mull
    [ ] corvette (enemy: crow) <-- enemies are named after birds I guess
    [ ] cruiser (enemy: vulture)
[ ] order that toggles `ship.evasive` & retreat_check checks it

### misc
[ ] help facility?
[ ] `wait <unit> <duration>`  <-- add duration?

### low priority
[ ] mull a 'maneuverability' value for ships
[ ] look into non-flat probabilities:
    https://docs.python.org/3/library/random.html#real-valued-distributions
[ ] raiders sometimes carry off hostages when they raid settlements?
    have to send ships to get them back? that implies boarding ops
[ ] attempt to use dataclasses for SpaceborneObject & children
